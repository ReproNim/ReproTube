1
00:00:01,800 --> 00:00:04,500
Welcome to the presentation of DataLad Catalog:

2
00:00:05,000 --> 00:00:7,600
a free and open source command line tool, with a Python API,

3
00:00:08,000 --> 00:00:13,500
that lets you create user-friendly, browser-based data catalogs from structured metadata.

4
00:00:14,500 --> 00:00:20,800
The importance and benefits of making research data Findable, Accessible, Interoperable, and Reusable are clear.

6
00:00:21,000 --> 00:00:28,500
But of equal importance are our legal and ethical obligations to protect the personal data privacy of research participants.

7
00:00:29,000 --> 00:00:35,000
So we are struck with this apparent contradiction: how can we share our data openlyâ€¦yet keep it secure and protected?

8
00:00:35,200 --> 00:00:40,000
Should we err on the side of FAIRness, or of data privacy? And do we even have to choose?

9
00:00:41,000 --> 00:00:44,000
Ideally, no. And in practice, also no, 

10
00:00:44,500 --> 00:00:50,500
because we have a powerful opportunity in the form of linked, structured, and machine-readable metadata.

11
00:00:51,000 --> 00:00:57,400
Metadata provides not only high-level information about our research data, such as study and data acquisition parameters,

12
00:00:57,800 --> 00:01:02,700
but also the descriptive aspects of each file in the dataset, such as file paths, sizes, and formats.

13
00:01:03,000 --> 00:01:09,500
With this metadata, we can create an abstract representation of the full dataset that is separate from the actual data content.

14
00:01:10,000 --> 00:01:15,000
This means that the content can be stored securely, while we openly share the metadata to make our work more FAIR.

15
00:01:16,000 --> 00:01:21,400
As an added benefit, structured and machine-readable metadata that conforms to industry standards

16
00:01:21,500 --> 00:01:27,000
improves the interoperability and allows the use of automated pipelines and tools.

17
00:01:30,500 --> 00:01:36,500
These ideals are achievable in practice, with a toolset that includes the distributed data management system DataLad,

18
00:01:36,800 --> 00:01:40,500
and its extensions for metadata handling and catalog generation.

19
00:01:41,000 --> 00:01:47,800
DataLad can be used for decentralised management of data as lightweight, portable and extensible representations.

20
00:01:48,000 --> 00:01:54,500
Datalad-metalad can extract structured high- and low-level metadata and associate it with these datasets or with individual files.

21
00:01:55,300 --> 00:02:00,800
And at the end of the workflow, Datalad-catalog can turn the structured metadata into a user-friendly data browser!

22
00:02:02,200 --> 00:02:04,800
So how does the catalog generation process work?

23
00:02:05,000 --> 00:02:08,500
Metadata extracted from various sources, even custom sources,

24
00:02:08,700 --> 00:02:10,800
can be aggregated and added to a catalog.

25
00:02:11,000 --> 00:02:13,200
Incoming metadata will first be validated

26
00:02:13,300 --> 00:02:14,800
against a catalog-specific schema,

27
00:02:15,000 --> 00:02:18,500
before the catalog is generated or individual entries are added.

28
00:02:19,000 --> 00:02:20,500
Once the process is finished,

29
00:02:20,800 --> 00:02:23,300
the output is a set of structured metadata files, 

29
00:02:23,500 --> 00:02:26,000
as well as a Vue.js-based browser interface

30
00:02:26,400 --> 00:02:28,800
that understands how to render this metadata.

31
00:02:29,900 --> 00:02:31,100
What is left for the user

32
00:02:31,300 --> 00:02:33,500
is to host this content on their platform of choice

32
00:02:33,600 --> 00:02:35,300
and serve it for the world to see.

33
00:02:36,300 --> 00:02:42,800
Datalad catalog brings the powerful functionality of decentralised metadata handling and data publishing into the hands of users,

34
00:02:43,000 --> 00:02:49,000
preventing dependence on centralised infrastructure and keeping private data secure while adhering to FAIR principles.

35
00:02:49,600 --> 00:02:53,000
Please explore the demo catalog, walk through the interactive tutorial

36
00:02:53,100 --> 00:02:58,000
or visit the codebase to start using or contributing to datalad catalog.
